class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        return buildHelper(inorder, 0, inorder.length - 1, postorder, 0, postorder.length - 1);
    }
    TreeNode buildHelper(int[] inorder, int inStart, int inEnd, int[] postorder, int postStart, int postEnd) {
        if (inStart > inEnd) {
            return null;
        }
        int rootVal = postorder[postEnd];
        int middle = 0;
        for (int i = inStart; i <= inEnd; i++) {
            if(inorder[i] == rootVal) {
                middle = i;
                break;
            }
        }
        int leftSize = middle - inStart;
        TreeNode root = new TreeNode(rootVal);
        root.left = buildHelper(inorder, inStart, middle - 1, postorder, postStart, postStart + leftSize - 1);
        root.right = buildHelper(inorder, middle + 1, inEnd, postorder, postStart + leftSize, postEnd - 1);
        return root;
    }
}
